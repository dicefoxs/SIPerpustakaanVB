<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="SiticoneDragControl1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAC8OAAAvDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF6//QBev/0EXsD+KV6//mxewf6sXsH+2V6/
        /vJev/79XsD+/V6//vJewP7ZXsH+rF6//mxewP4pXr/8BF6//QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF6//QBevvwDXsD+N17A/pdevfrfXr35+1yp
        2f9bpND/Wpe7/1qXuv9albj/WprA/1yn1f9cptP/Xr35+169+t9ewP6XXsD+N16+/ANev/0AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF6//QBev/0AXr/9Gl7A/olevPjqXbfv/1qY
        vf9ZhZ3/W5q//1qQr/9bo87/W6LN/1ugyv9bpdL/WpOz/1qQsP9Zh5//WpW2/1206/9eu/fqXsD/iV6/
        /Rpev/4AXr/9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABev/0AXr/+AF6//TVev/zCXrn0/luk
        0f9XdoP/XKvc/1yn1f9ewP7/Xr/9/1237/9evPf/Xbbu/1679/9evvv/Xr78/1yq2f9cqtr/V3aD/1uk
        0P9dt/D+Xr78wl6//TVev/4AXr/9AAAAAAAAAAAAAAAAAAAAAAAAAAAAXr/9AF6//QBev/1BXsD+2V23
        8P9XdYH/XKbU/12w5P9evPj/Xrz4/1mOq/9bo83/V3iH/1ufx/9XeYn/W5zC/1iAlf9cqNf/XbDl/167
        9/9dtOv/XKbU/1dzfv9dt+//XsD+2V6//UFev/0AXr/9AAAAAAAAAAAAAAAAAF6//QBev/0AXr/9Nl7C
        /9hbnsb/WYii/1yq2f9dufP/Xr36/1mKpf9Zjqv/Wpe6/1yq2v9dseX/Xbjy/12x5v9dtu//W5zC/1ys
        3f9Xc37/W6LM/1ys3f9euvT/XK3f/1mLp/9bncX/XsL/2F6//TZev/0AXr/9AAAAAAAAAAAAXr/9AF6/
        /Rpev/3BXK3g/1ugyf9bnsX/XsP//1ujzv9YfY//XKra/1yu4P9ewf//XsD+/17A/v9ev/7/XsD+/16/
        /v9ewf//Xr/8/1227v9cpdH/V3aD/12z6v9evfn/W5/I/1ugyv9crN7/Xr/9wV6//Rpev/0AAAAAAF6/
        /QBevvwCXr/9iV6//f9YgJT/W5vB/17B//9akLD/W6DK/1ym1P9ev/3/XsD+/16//f9ev/3/Xr/9/16/
        /f9ev/3/Xr/9/16//f9ev/3/XsD+/16++/9dufP/WIOa/1qWuP9exf//W6DI/1h8jv9evvv/XsD+iV6+
        /AJev/0AXr/9AF6//jdevvvpWpKx/1ym0/9evPj/XbLn/1mOq/9cq9v/XsH//16//f9ev/3/Xr/9/16/
        /f9ev/3/Xr/9/16//f9ev/3/Xr/9/16//f9ev/3/Xr/9/17A/v9dsOX/W6PO/1qZvf9evfn/XKfV/1mL
        p/9evPjpXsD+N16//QBev/0CXr/+l169+f9Zjar/XKra/1217P9Xc3//XbPn/17B//9ev/7/Xr/+/16/
        /v9ev/7/Xr/+/16//v9ev/7/Xr/+/16//v9ev/7/Xr/+/16//v9ev/7/Xr/+/17C//9cp9P/WYeg/168
        +P9cr+L/WY2q/1669f9ev/6XXr/9Al6//Spev/3eWYmk/1uhyv9evvv/W6HM/1ys3v9bncX/Vm10/1Zs
        c/9WbHP/Vmxz/1Zsc/9WbHP/Vmxz/1Zsc/9WbHP/Vmxz/1Zsc/9WbHP/Vmxz/1Zsc/9WbHP/Vm10/1ug
        yv9cqdj/WICU/16//P9bn8j/WYeg/16//d5ev/0qXr/+bF6++/tbnML/XK3e/1248f9Xd4X/XbHl/1eA
        lP97Y0r/rZ6O/6ydjf+snY3/rJ2N/6ydjf+snY3/rJ2N/6ydjf+snY3/rJ2N/6ydjf+snY3/rJ2N/62e
        jv97Y0r/V3+T/1227/9bnMP/Xbnz/1yv4v9bnsb/Xr35+16//mxewf+sXKbU/1h9j/9evfn/W5/H/1uh
        zP9ewf//V4KZ/2pTOv+IdmL/iHZi/4h2Yv+IdmL/iHZi/4h2Yv+IdmL/iHZi/4h2Yv+IdmL/iHZi/4h2
        Yv+IdmL/iHZi/2pTOv9Xgpj/XsP//1mOq/9Zi6f/Xr/9/1h+kf9bosz/XsL/rF7A/tldseb/W6DK/16+
        /P9ZkK//Wpm9/17B//9dsOT/VG96/29aQf+vo5T/r6OV/7Cklf+wo5X/sKSV/6+jlf+vo5X/sKSV/7Cj
        lf+wpJX/r6OV/7Cklf9zXUX/VGx0/12w5P9ewP//XK/i/1yl0v9evvv/W6TQ/1yv4/9ewP7ZXsD/8lmL
        p/9akbD/Xrz3/1qVuP9dte3/XsD+/17C//9Zlbf/YU01/4FuWP+DcFv/gW5Z/4FwXf+Bblr/g29a/4Nv
        Wv+Bblr/gXBd/4FuWf+DcFv/gm5Z/2NONv9ZkK7/XsL//17A//9crN3/V3SB/1258/9ak7P/WYae/17A
        //Jev/78XKjX/1ys3f9dufP/WIKX/12w5P9ewP//XsD+/1237/9VfZH/cV1I/66fkf9ZUEH/V4+v/1Jf
        YP+TgW7/k4Fu/1JfYP9Xj6//WVBB/66fkf9xXUj/VXyQ/1217f9ewP7/Xr/+/1258/9cp9X/Xr35/1yu
        4f9cqNb/Xr/9/F7A/vxZhZz/WpS2/168+f9albf/XbTr/17A/v9ev/3/XsL//1iawP+BcmD/18/H/19f
        Vv9dufP/VXWC/7Kklv+ypJb/VXWC/1258/9fX1b/18/H/4FyYP9YmsD/XsL//16//f9ewP7/XbDl/1dy
        fv9dte3/W5q//1iBlf9ev/38Xr/+8lyq2v9crd//Xbn0/1iCmP9dsOP/XsD//16//f9ewf//WJm//4Fy
        YP/Xz8f/X15V/1238f9VdIH/sqSW/7Kklv9VdIH/Xbfx/19eVf/Xz8f/gXJg/1iZv/9ewf//Xr/9/16/
        /v9dt+//XKTQ/169+f9dr+P/XKra/16//fJewf/ZW5vC/1iBlv9ev/7/W57G/1uhzP9ewP//Xr/9/17B
        //9Ymb//gXJg/9fPx/9fXlX/Xbfx/1V0gf+ypJb/sqSW/1V0gf9dt/H/X15V/9fPx/+BcmD/WJm//17B
        //9ev/3/XsH//1uex/9Xe4z/Xr78/1iGnv9ak7T/XsH/2V7A/6xds+r/W6LN/169+f9al7v/W5q//17A
        //9ewP7/XsP//1iawP+BcmD/18/H/19fVv9dufP/VXWC/7Kklv+ypJb/VXWC/1258/9fX1b/18/H/4Fy
        YP9YmsD/XsP//17A/v9evvv/XKfU/1yt3/9evPn/XKTR/12y6P9ewP+sXsD+bF669ftXdIH/XKfV/169
        +v9ZiKH/XK3f/12z6v9anML/Vn6R/3RhSf+zpZX/W1JC/1mTs/9UYmL/mIVw/5iFcP9UYmL/WZOz/1tS
        Qv+zpZX/dGFJ/1Z+kf9am8L/XbLn/1269P9XdYH/XKvc/1yu4P9Xcnz/Xbbu+17A/2xev/0qXr783lyp
        2P9cpM//Xrv2/1qRsf9cq9v/Wpm+/1JCLf9RPDL/UkNW/1VGWP9RQ1b/UUVb/1FDV/9SQlb/UkJW/1FD
        V/9RRVv/UUNW/1VGWP9SQ1b/UTwy/1JAKv9alLb/WprA/1yp2P9evPf/XKfU/1yr3P9evvveXsD+Kl6/
        /QJewf+XXbDk/1d2g/9duPH/Xrz3/1d3hf9cptP/WpCu/1JJRf9RTpv/UV7p/1Ff7P9RX+v/U2Hr/3aB
        7v92ge7/U2Hr/1Ff6/9RX+z/UV7p/1FOm/9SRkL/WYqk/1238P9Yg5n/XKnZ/1268/9XdYH/XK3e/17B
        /5dev/wCXr/9AF6//jdevvzpXbDk/1qSsf9duPH/XKnY/1uhy/9dtu7/W53D/1NRTv9RS4n/UV/q/09e
        8/9+ifX/8fL+//Hy/v9+ifX/T17z/1Ff6v9RS4n/U05J/1qZvf9dtOr/V3qK/12z6f9evPf/WY6r/1yr
        2/9evvvpXr/+N16//QBev/0AXr/8Al7A/4ldtOv/WIKY/12w4/9evvr/XKjW/1258/9ewf//XKjW/1Rc
        W/9RR3H/Tlrg/4eR+P/6+v//+vr//4eR+P9OWuD/UUZw/1RYVf9cpdH/XsH//1669f9boMr/Xbnz/12y
        5/9Zh6D/XbDl/17B/4levvwCXr/9AAAAAABev/0AXr/9Gl7A/sFevPf/V3uL/1uk0P9ewf//Xr/9/16/
        /f9ewf//XbLm/1Zpbv9RRF3/WGDS/5Ca+f+Qmvn/WGDT/1FDW/9WZWf/XbDj/17B//9ev/3/Xr/9/17C
        //9cq9v/V3WB/1258v9ewP/BXr/9Gl6//QAAAAAAAAAAAF6//QBev/0AXr/9Nl6+/Nhcrd//Xbnz/16/
        /v9ev/3/Xr/9/16//f9ewP//Xbny/1d4hv9RRE7/TlO//05Tv/9RQkz/V3R//1237/9ewP//Xr/9/16/
        /f9ev/3/Xr/9/1679v9crd//Xr772F6//jZev/0AXr/9AAAAAAAAAAAAAAAAAF6//QBev/4AXr/9QV7A
        /tlev/3/Xr/9/16//f9ev/3/Xr/9/16//f9ewP7/Xr35/1mIoP9SRkP/UkRA/1mEmf9evPj/XsD+/16/
        /f9ev/3/Xr/9/16//f9ev/3/Xr/9/17A/tlev/1BXsD+AF6//QAAAAAAAAAAAAAAAAAAAAAAAAAAAF6/
        /QBev/0AXr/9NV6//cJev/3+Xr/9/16//f9ev/3/Xr/9/16//f9ev/7/Xr/9/1ubwf9amb3/Xr/8/16/
        /v9ev/3/Xr/9/16//f9ev/3/Xr/9/16//f5ev/3CXr/9NV6//QBev/0AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAF6//QBev/0AXr/9Gl6//Ylev/3qXr/9/16//f9ev/3/Xr/9/16//f9ev/3/XsD//17B
        //9ev/3/Xr/9/16//f9ev/3/Xr/9/16//f9ev/3qXr/9iV6//Rpev/0AXr/9AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABev/0AXr/9A16//Tdev/2XXr/9316//ftev/3/Xr/9/16/
        /f9ev/3/Xr/9/16//f9ev/3/Xr/9/16//ftev/3fXr/9l16//Tdev/0DXr/9AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXr/9AF6//QRev/0pXr/9bF6/
        /axev/3ZXr/98l6//f1ev/39Xr/98l6//dlev/2sXr/9bF6//Slev/0EXr/9AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/4AB//4AAH/8AAA/+AAAH/AAAA/gAAAHwAAAA4AAAAGAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABgAAAAcAA
        AAPgAAAH8AAAD/gAAB/8AAA//gAAf/+AAf8=
</value>
  </data>
</root>